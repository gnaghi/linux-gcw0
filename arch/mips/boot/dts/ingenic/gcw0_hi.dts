/dts-v1/;

#include "jz4770.dtsi"

#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>
#include <dt-bindings/pwm/pwm.h>
#include <dt-bindings/sound/ingenic,jz4770-codec.h>

/ {
	compatible = "gcw,zero", "ingenic,jz4770";

	aliases {
		serial0 = &uart0;
		serial1 = &uart1;
		serial2 = &uart2;
		serial3 = &uart3;
	};

	chosen {
		stdout-path = "serial2:57600n8";
	};

	board {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "simple-bus";
		ranges = <>;

		regulators {
			#address-cells = <1>;
			#size-cells = <1>;
			compatible = "simple-bus";
			ranges = <>;

			vcc: regulator@0 {
				compatible = "regulator-fixed";
				regulator-name = "vcc";

				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			usb_power: regulator@1 {
				compatible = "regulator-fixed";
				regulator-name = "USB Power";
				gpio = <&gpf 10 GPIO_ACTIVE_HIGH>;

				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3300000>;
				power-supply = <&vcc>;
			};

			mmc0_power: regulator@2 {
				compatible = "regulator-fixed";
				regulator-name = "mmc0_vcc";
				regulator-always-on;

				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3300000>;
				power-supply = <&vcc>;
			};

			mmc1_power: regulator@3 {
				compatible = "regulator-fixed";
				regulator-name = "mmc1_vcc";
				gpio = <&gpe 9 GPIO_ACTIVE_LOW>;

				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3300000>;
				power-supply = <&vcc>;
			};
		};

		usb_charger: usb {
			compatible = "gpio-charger";
			charger-type = "usb-sdp";
			gpios = <&gpb 5 GPIO_ACTIVE_HIGH>;
			pinctrl-names = "default";
			pinctrl-0 = <&pins_usb_charger>;
		};

		dc_charger: dc {
			compatible = "gpio-charger";
			charger-type = "mains";
			gpios = <&gpf 5 GPIO_ACTIVE_HIGH>;
			pinctrl-names = "default";
			pinctrl-0 = <&pins_dc_charger>;
		};

		audio {
			compatible = "ingenic,gcw0-audio";
			ingenic,i2s-controller = <&i2s>;
			ingenic,codec = <&codec>;
			ingenic,mic-mode = <JZ4770_MIC_1>;

			avout-gpios = <&gpf 3 GPIO_ACTIVE_LOW>;
			speaker-gpios = <&gpf 20 GPIO_ACTIVE_HIGH>;
			detect-gpios = <&gpf 21 GPIO_ACTIVE_HIGH>;
		};

		rfkill {
			compatible = "rfkill-regulator";
			vrfkill-supply = <&usb_power>;
			rfkill-name = "gcw0-wifi";
			rfkill-type = <1>;
		};

		rumble {
			compatible = "pwm-haptic";
			pwms = <&pwm 4 2000000 0>;

			pinctrl-names = "default";
			pinctrl-0 = <&pinfunc_pwm4_data>;
		};

		backlight {
			compatible = "pwm-backlight";
			pwms = <&pwm 1 40000 0>;
			power-supply = <&vcc>;

			brightness-levels = <0 16 32 48 64 80 96 112 128 144 160 176 192 208 224 240 255>;
			default-brightness-level = <12>;

			pinctrl-names = "default";
			pinctrl-0 = <&pinfunc_pwm1_data>;
		};

		gpio-keys {
			compatible = "gpio-keys";
			#address-cells = <1>;
			#size-cells = <0>;

			autorepeat;

			button@0 {
				label = "D-pad up";
				linux,code = <KEY_UP>;
				gpios = <&gpe 21 GPIO_ACTIVE_LOW>;
				debounce-interval = <10>;
			};

			button@1 {
				label = "D-pad down";
				linux,code = <KEY_DOWN>;
				gpios = <&gpe 25 GPIO_ACTIVE_LOW>;
				debounce-interval = <10>;
			};

			button@2 {
				label = "D-pad left";
				linux,code = <KEY_LEFT>;
				gpios = <&gpe 23 GPIO_ACTIVE_LOW>;
				debounce-interval = <10>;
			};

			button@3 {
				label = "D-pad right";
				linux,code = <KEY_RIGHT>;
				gpios = <&gpe 24 GPIO_ACTIVE_LOW>;
				debounce-interval = <10>;
			};

			button@4 {
				label = "Button A";
				linux,code = <KEY_LEFTCTRL>;
				gpios = <&gpe 29 GPIO_ACTIVE_LOW>;
				debounce-interval = <10>;
			};

			button@5 {
				label = "Button B";
				linux,code = <KEY_LEFTALT>;
				gpios = <&gpe 20 GPIO_ACTIVE_LOW>;
				debounce-interval = <10>;
			};

			button@6 {
				label = "Button Y";
				linux,code = <KEY_SPACE>;
				gpios = <&gpe 27 GPIO_ACTIVE_LOW>;
				debounce-interval = <10>;
			};

			button@7 {
				label = "Button X";
				linux,code = <KEY_LEFTSHIFT>;
				gpios = <&gpe 28 GPIO_ACTIVE_LOW>;
				debounce-interval = <10>;
			};

			button@8 {
				label = "Left shoulder button";
				linux,code = <KEY_TAB>;
				gpios = <&gpb 20 GPIO_ACTIVE_LOW>;
				debounce-interval = <10>;
			};

			button@9 {
				label = "Right shoulder button";
				linux,code = <KEY_BACKSPACE>;
				gpios = <&gpe 26 GPIO_ACTIVE_LOW>;
				debounce-interval = <10>;
			};

			button@10 {
				label = "Start button";
				linux,code = <KEY_ENTER>;
				gpios = <&gpb 21 GPIO_ACTIVE_LOW>;
				debounce-interval = <10>;
			};

			button@11 {
				label = "Select button";
				linux,code = <KEY_ESC>;
				/* This is the only button that is active high,
				 * since it doubles as BOOT_SEL1.
				 */
				gpios = <&gpd 18 GPIO_ACTIVE_HIGH>;
				debounce-interval = <10>;
			};

			button@12 {
				label = "Power slider";
				linux,code = <KEY_POWER>;
				gpios = <&gpa 30 GPIO_ACTIVE_LOW>;
				debounce-interval = <10>;
				gpio-key,wakeup;
			};

			button@13 {
				label = "Power hold";
				linux,code = <KEY_PAUSE>;
				gpios = <&gpf 11 GPIO_ACTIVE_LOW>;
				debounce-interval = <10>;
			};
		};

		i2c3: i2c-act8600 {
			compatible = "i2c-gpio";
			gpios = <&gpd 5 GPIO_ACTIVE_HIGH	/* sda */
				 &gpd 4 GPIO_ACTIVE_HIGH	/* scl */
				>;
			#address-cells = <1>;
			#size-cells = <0>;
		};

		i2c4: i2c-it6610 {
			compatible = "i2c-gpio";
			gpios = <&gpd 6 GPIO_ACTIVE_HIGH	/* sda */
				 &gpd 7 GPIO_ACTIVE_HIGH	/* scl */
				>;
			#address-cells = <1>;
			#size-cells = <0>;
		};

		spi0 {
			compatible = "spi-gpio";
			gpio-sck = <&gpe 15 GPIO_ACTIVE_HIGH>;
			gpio-mosi = <&gpe 17 GPIO_ACTIVE_HIGH>;
			cs-gpios = <&gpe 16 GPIO_ACTIVE_HIGH>;
			num-chipselects = <1>;
			#address-cells = <1>;
			#size-cells = <0>;

			lcd: nt39016@0 {
				compatible = "novatek,nt39016";
				reg = <0>;
				spi-max-frequency = <3125000>;
				/* TODO: spi-3wire; */

				reset-gpios = <&gpe 2 GPIO_ACTIVE_LOW>;
				panel-supply = <&ldo6>;

				fb-dev = <&lcdc>;
			};
			
			hx8357: hx8357@0 {
				compatible = "himax,hx8363a", "himax,hx8363";
				reg = <0>;
				spi-max-frequency = <3125000>;
				spi-cpol;
				spi-cpha;
				gpios-reset = <&gpe 2 GPIO_ACTIVE_LOW>;
				im-gpios = <&gpe 15 GPIO_ACTIVE_HIGH &gpe 16 GPIO_ACTIVE_HIGH &gpe 17 GPIO_ACTIVE_HIGH>;

				fb-dev = <&lcdc>;
			};

		};

		leds {
			compatible = "gpio-leds";

			power {
				gpios = <&gpb 30 GPIO_ACTIVE_LOW>;
				default-state = "on";
			};
		};

		otg_phy: otg-phy {
			compatible = "usb-nop-xceiv";
			clocks = <&cgu JZ4770_CLK_OTG_PHY>;
			clock-names = "main_clk";
		};
	};
};

&ext {
	clock-frequency = <12000000>;
};

&uart2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pins_uart2_data>;

	status = "okay";
};

&pinctrl_functions {
	pinfunc_usb_charger: usb {
		pins_usb_charger: usb-charger {
			ingenic,pins = <&gpb 5 0 &pincfg_nobias>;
		};
	};

	pinfunc_dc_charger: dc {
		pins_dc_charger: dc-charger {
			ingenic,pins = <&gpf 5 0 &pincfg_nobias>;
		};
	};
};

&i2c0 {
	status = "okay";
	i2c-gpio,delay-us = <2>;		/* 250 kHz */

	rda5807@11 {				/* FM radio receiver */
		compatible = "rdamicro,rda5807";
		reg = <0x11>;
		lnap;
		lna-current = <2500>;
		analog-out;
	};
};

&i2c1 {
	status = "okay";
	i2c-gpio,delay-us = <2>;		/* 250 kHz */

	mxc6225@15 {				/* g-sensor */
		compatible = "mxc6225";
		reg = <0x15>;
	};
};

&i2c3 {
	i2c-gpio,delay-us = <2>;		/* 250 kHz */

	act8600: act8600@5a {			/* power management unit */
		compatible = "active-semi,act8600";
		reg = <0x5a>;

		regulators {
			/* USB OTG */
			SUDCDC_REG4 {
				/*
				 * 5.3V instead of 5.0V to compensate for the
				 * voltage drop of a diode between the regulator
				 * and the connector.
				 */
				regulator-min-microvolt = <5300000>;
				regulator-max-microvolt = <5300000>;
			};

			/* When this is off, there is no sound, but also no USB networking. */
			LDO_REG5 {
				regulator-min-microvolt = <2500000>;
				regulator-max-microvolt = <2500000>;
				regulator-always-on;
			};

			/* LCD panel and FM radio */
			ldo6: LDO_REG6 {
				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3300000>;
			};

			/* ??? */
			LDO_REG7 {
				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3300000>;
				/*regulator-always-on;*/
			};

			/*
			 * This powers the HDMI transmitter. If both LDO6 and
			 * LDO8 have been off, graphical glitches appear on the
			 * LCD, which appear to originate from the RGB lines.
			 */
			LDO_REG8 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
				regulator-always-on;
			};

			/* RTC fixed 3.3V */
			LDO_REG9 {
				regulator-always-on;
			};

			/* Unused fixed 1.2V */
			LDO_REG10 { };
		};

		CHARGER { };
	};
};

&i2c4 {
	i2c-gpio,delay-us = <5>;		/* 100 kHz */

	/* the IT6610 is on this bus, but we don't have a driver for it yet */
};

&cgu {
	/* Put high-speed peripherals under PLL1, such that we can change the
	 * PLL0 frequency on demand without having to suspend peripherals.
	 * We use a rate of 432 MHz, which is the least common multiple of
	 * 27 MHz (required by TV encoder) and 48 MHz (required by USB host).
	 */
	assigned-clocks =
		<&cgu JZ4770_CLK_PLL1>,
		<&cgu JZ4770_CLK_RTC>,
		<&cgu JZ4770_CLK_UHC>,
		<&cgu JZ4770_CLK_LPCLK_MUX>,
		<&cgu JZ4770_CLK_MMC0_MUX>,
		<&cgu JZ4770_CLK_MMC1_MUX>;
	assigned-clock-parents =
		<0>,
		<&cgu JZ4770_CLK_OSC32K>,
		<&cgu JZ4770_CLK_PLL1>,
		<&cgu JZ4770_CLK_PLL1>,
		<&cgu JZ4770_CLK_PLL1>,
		<&cgu JZ4770_CLK_PLL1>;
	assigned-clock-rates =
		<432000000>;
};

&tcu {
	assigned-clocks = <&tcu JZ4770_CLK_OST>, <&tcu JZ4740_CLK_WDT>;
	assigned-clock-parents = <0>, <&cgu JZ4770_CLK_RTC>;
	assigned-clock-rates = <12000000>;
};

&battery {
	battery-name = "battery";
	technology = <3>; /* Lithium polymer */
	max-uV = <5700000>;
	min-uV = <4600000>;
	charger = <&act8600>;
	power-supplies = <&act8600>, <&usb_charger>, <&dc_charger>;
};

&uhc {
	/* The WiFi module is connected to the UHC. */
	status = "okay";
};

&usb_otg {
	usb-phy = <&otg_phy>;
	mode = <3>; /* MUSB_OTG */
	status = "okay";

	pinctrl-names = "default";
	pinctrl-0 = <&pins_otg_data>;
};

&rtc {
	clocks = <&cgu JZ4770_CLK_RTC>;
	clock-names = "rtc";

	system-power-controller;
};

&lcdc {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&pinfunc_lcd_rgb888>;
	pinctrl-1 = <&pinfunc_lcd_nopins>;
};

&mmc0 {
	bus-width = <4>;
	max-frequency = <48000000>;
	vmmc-supply = <&mmc0_power>;
	non-removable;

	pinctrl-names = "default";
	pinctrl-0 = <&pins_msc0_4bit>;
};

&mmc1 {
	bus-width = <4>;
	max-frequency = <48000000>;
	cd-gpios = <&gpb 2 GPIO_ACTIVE_LOW>;
	vmmc-supply = <&mmc1_power>;

	pinctrl-names = "default";
	pinctrl-0 = <&pins_msc1_4bit>;
};

&mmc2 {
	/* MMC2 is not used on the GCW0; disable it */
	status = "disabled";
};

&timer_ingenic {
	timers = <5 6>;
};
